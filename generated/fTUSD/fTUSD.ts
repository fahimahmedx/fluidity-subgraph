// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BlockedReward extends ethereum.Event {
  get params(): BlockedReward__Params {
    return new BlockedReward__Params(this);
  }
}

export class BlockedReward__Params {
  _event: BlockedReward;

  constructor(event: BlockedReward) {
    this._event = event;
  }

  get winner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get startBlock(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get endBlock(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BurnFluid extends ethereum.Event {
  get params(): BurnFluid__Params {
    return new BurnFluid__Params(this);
  }
}

export class BurnFluid__Params {
  _event: BurnFluid;

  constructor(event: BurnFluid) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Emergency extends ethereum.Event {
  get params(): Emergency__Params {
    return new Emergency__Params(this);
  }
}

export class Emergency__Params {
  _event: Emergency;

  constructor(event: Emergency) {
    this._event = event;
  }

  get status(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class MaxUncheckedRewardLimitChanged extends ethereum.Event {
  get params(): MaxUncheckedRewardLimitChanged__Params {
    return new MaxUncheckedRewardLimitChanged__Params(this);
  }
}

export class MaxUncheckedRewardLimitChanged__Params {
  _event: MaxUncheckedRewardLimitChanged;

  constructor(event: MaxUncheckedRewardLimitChanged) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MintApproval extends ethereum.Event {
  get params(): MintApproval__Params {
    return new MintApproval__Params(this);
  }
}

export class MintApproval__Params {
  _event: MintApproval;

  constructor(event: MintApproval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MintFluid extends ethereum.Event {
  get params(): MintFluid__Params {
    return new MintFluid__Params(this);
  }
}

export class MintFluid__Params {
  _event: MintFluid;

  constructor(event: MintFluid) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NewOperator extends ethereum.Event {
  get params(): NewOperator__Params {
    return new NewOperator__Params(this);
  }
}

export class NewOperator__Params {
  _event: NewOperator;

  constructor(event: NewOperator) {
    this._event = event;
  }

  get old(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get new_(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OperatorChanged extends ethereum.Event {
  get params(): OperatorChanged__Params {
    return new OperatorChanged__Params(this);
  }
}

export class OperatorChanged__Params {
  _event: OperatorChanged;

  constructor(event: OperatorChanged) {
    this._event = event;
  }

  get oldOperator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOperator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Reward extends ethereum.Event {
  get params(): Reward__Params {
    return new Reward__Params(this);
  }
}

export class Reward__Params {
  _event: Reward;

  constructor(event: Reward) {
    this._event = event;
  }

  get winner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get startBlock(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get endBlock(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RewardQuarantineThresholdUpdated extends ethereum.Event {
  get params(): RewardQuarantineThresholdUpdated__Params {
    return new RewardQuarantineThresholdUpdated__Params(this);
  }
}

export class RewardQuarantineThresholdUpdated__Params {
  _event: RewardQuarantineThresholdUpdated;

  constructor(event: RewardQuarantineThresholdUpdated) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UnblockReward extends ethereum.Event {
  get params(): UnblockReward__Params {
    return new UnblockReward__Params(this);
  }
}

export class UnblockReward__Params {
  _event: UnblockReward;

  constructor(event: UnblockReward) {
    this._event = event;
  }

  get originalRewardTx(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get winner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get startBlock(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get endBlock(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class fTUSD__getUtilityVarsResultValue0Struct extends ethereum.Tuple {
  get poolSizeNative(): BigInt {
    return this[0].toBigInt();
  }

  get tokenDecimalScale(): BigInt {
    return this[1].toBigInt();
  }

  get exchangeRateNum(): BigInt {
    return this[2].toBigInt();
  }

  get exchangeRateDenom(): BigInt {
    return this[3].toBigInt();
  }

  get deltaWeightNum(): BigInt {
    return this[4].toBigInt();
  }

  get deltaWeightDenom(): BigInt {
    return this[5].toBigInt();
  }
}

export class fTUSD extends ethereum.SmartContract {
  static bind(address: Address): fTUSD {
    return new fTUSD("fTUSD", address);
  }

  DOMAIN_SEPARATOR(): Bytes {
    let result = super.call(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DOMAIN_SEPARATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  allowance(_owner: Address, _spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(_owner), ethereum.Value.fromAddress(_spender)]
    );

    return result[0].toBigInt();
  }

  try_allowance(
    _owner: Address,
    _spender: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(_owner), ethereum.Value.fromAddress(_spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(_spender: Address, _amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(_spender),
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(
    _spender: Address,
    _amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(_spender),
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseAllowance(_spender: Address, _subtractedValue: BigInt): boolean {
    let result = super.call(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_spender),
        ethereum.Value.fromUnsignedBigInt(_subtractedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_decreaseAllowance(
    _spender: Address,
    _subtractedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_spender),
        ethereum.Value.fromUnsignedBigInt(_subtractedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  emergencyCouncil(): Address {
    let result = super.call(
      "emergencyCouncil",
      "emergencyCouncil():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_emergencyCouncil(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "emergencyCouncil",
      "emergencyCouncil():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  erc20In(_amount: BigInt): BigInt {
    let result = super.call("erc20In", "erc20In(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBigInt();
  }

  try_erc20In(_amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("erc20In", "erc20In(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  erc20InTo(_recipient: Address, _amount: BigInt): BigInt {
    let result = super.call(
      "erc20InTo",
      "erc20InTo(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_recipient),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_erc20InTo(
    _recipient: Address,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "erc20InTo",
      "erc20InTo(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_recipient),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUtilityVars(): fTUSD__getUtilityVarsResultValue0Struct {
    let result = super.call(
      "getUtilityVars",
      "getUtilityVars():((uint256,uint256,uint256,uint256,uint256,uint256))",
      []
    );

    return changetype<fTUSD__getUtilityVarsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getUtilityVars(): ethereum.CallResult<
    fTUSD__getUtilityVarsResultValue0Struct
  > {
    let result = super.tryCall(
      "getUtilityVars",
      "getUtilityVars():((uint256,uint256,uint256,uint256,uint256,uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<fTUSD__getUtilityVarsResultValue0Struct>(value[0].toTuple())
    );
  }

  increaseAllowance(_spender: Address, _addedValue: BigInt): boolean {
    let result = super.call(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_spender),
        ethereum.Value.fromUnsignedBigInt(_addedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_increaseAllowance(
    _spender: Address,
    _addedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_spender),
        ethereum.Value.fromUnsignedBigInt(_addedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxUncheckedReward(): BigInt {
    let result = super.call(
      "maxUncheckedReward",
      "maxUncheckedReward():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxUncheckedReward(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxUncheckedReward",
      "maxUncheckedReward():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  noEmergencyMode(): boolean {
    let result = super.call("noEmergencyMode", "noEmergencyMode():(bool)", []);

    return result[0].toBoolean();
  }

  try_noEmergencyMode(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "noEmergencyMode",
      "noEmergencyMode():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nonces(_owner: Address): BigInt {
    let result = super.call("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_nonces(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  operator(): Address {
    let result = super.call("operator", "operator():(address)", []);

    return result[0].toAddress();
  }

  try_operator(): ethereum.CallResult<Address> {
    let result = super.tryCall("operator", "operator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  oracle(): Address {
    let result = super.call("oracle", "oracle():(address)", []);

    return result[0].toAddress();
  }

  try_oracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("oracle", "oracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rewardPoolAmount(): BigInt {
    let result = super.call(
      "rewardPoolAmount",
      "rewardPoolAmount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_rewardPoolAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "rewardPoolAmount",
      "rewardPoolAmount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(_to: Address, _amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(_to),
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(_to: Address, _amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(_to),
      ethereum.Value.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(_from: Address, _to: Address, _amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    _from: Address,
    _to: Address,
    _amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferWithBeneficiary(
    _token: Address,
    _amount: BigInt,
    _beneficiary: Address,
    param3: BigInt
  ): boolean {
    let result = super.call(
      "transferWithBeneficiary",
      "transferWithBeneficiary(address,uint256,address,uint64):(bool)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_beneficiary),
        ethereum.Value.fromUnsignedBigInt(param3)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferWithBeneficiary(
    _token: Address,
    _amount: BigInt,
    _beneficiary: Address,
    param3: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferWithBeneficiary",
      "transferWithBeneficiary(address,uint256,address,uint64):(bool)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_beneficiary),
        ethereum.Value.fromUnsignedBigInt(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  underlyingLp(): Address {
    let result = super.call("underlyingLp", "underlyingLp():(address)", []);

    return result[0].toAddress();
  }

  try_underlyingLp(): ethereum.CallResult<Address> {
    let result = super.tryCall("underlyingLp", "underlyingLp():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  underlyingToken(): Address {
    let result = super.call(
      "underlyingToken",
      "underlyingToken():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_underlyingToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "underlyingToken",
      "underlyingToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userAmountMinted(param0: Address): BigInt {
    let result = super.call(
      "userAmountMinted",
      "userAmountMinted(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_userAmountMinted(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userAmountMinted",
      "userAmountMinted(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BatchRewardCall extends ethereum.Call {
  get inputs(): BatchRewardCall__Inputs {
    return new BatchRewardCall__Inputs(this);
  }

  get outputs(): BatchRewardCall__Outputs {
    return new BatchRewardCall__Outputs(this);
  }
}

export class BatchRewardCall__Inputs {
  _call: BatchRewardCall;

  constructor(call: BatchRewardCall) {
    this._call = call;
  }

  get rewards(): Array<BatchRewardCallRewardsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      BatchRewardCallRewardsStruct
    >();
  }

  get firstBlock(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get lastBlock(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BatchRewardCall__Outputs {
  _call: BatchRewardCall;

  constructor(call: BatchRewardCall) {
    this._call = call;
  }
}

export class BatchRewardCallRewardsStruct extends ethereum.Tuple {
  get winner(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class DecreaseAllowanceCall extends ethereum.Call {
  get inputs(): DecreaseAllowanceCall__Inputs {
    return new DecreaseAllowanceCall__Inputs(this);
  }

  get outputs(): DecreaseAllowanceCall__Outputs {
    return new DecreaseAllowanceCall__Outputs(this);
  }
}

export class DecreaseAllowanceCall__Inputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get _spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _subtractedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAllowanceCall__Outputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DisableEmergencyModeCall extends ethereum.Call {
  get inputs(): DisableEmergencyModeCall__Inputs {
    return new DisableEmergencyModeCall__Inputs(this);
  }

  get outputs(): DisableEmergencyModeCall__Outputs {
    return new DisableEmergencyModeCall__Outputs(this);
  }
}

export class DisableEmergencyModeCall__Inputs {
  _call: DisableEmergencyModeCall;

  constructor(call: DisableEmergencyModeCall) {
    this._call = call;
  }
}

export class DisableEmergencyModeCall__Outputs {
  _call: DisableEmergencyModeCall;

  constructor(call: DisableEmergencyModeCall) {
    this._call = call;
  }
}

export class DrainRewardPoolCall extends ethereum.Call {
  get inputs(): DrainRewardPoolCall__Inputs {
    return new DrainRewardPoolCall__Inputs(this);
  }

  get outputs(): DrainRewardPoolCall__Outputs {
    return new DrainRewardPoolCall__Outputs(this);
  }
}

export class DrainRewardPoolCall__Inputs {
  _call: DrainRewardPoolCall;

  constructor(call: DrainRewardPoolCall) {
    this._call = call;
  }

  get _recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DrainRewardPoolCall__Outputs {
  _call: DrainRewardPoolCall;

  constructor(call: DrainRewardPoolCall) {
    this._call = call;
  }
}

export class EnableEmergencyModeCall extends ethereum.Call {
  get inputs(): EnableEmergencyModeCall__Inputs {
    return new EnableEmergencyModeCall__Inputs(this);
  }

  get outputs(): EnableEmergencyModeCall__Outputs {
    return new EnableEmergencyModeCall__Outputs(this);
  }
}

export class EnableEmergencyModeCall__Inputs {
  _call: EnableEmergencyModeCall;

  constructor(call: EnableEmergencyModeCall) {
    this._call = call;
  }
}

export class EnableEmergencyModeCall__Outputs {
  _call: EnableEmergencyModeCall;

  constructor(call: EnableEmergencyModeCall) {
    this._call = call;
  }
}

export class Erc20InCall extends ethereum.Call {
  get inputs(): Erc20InCall__Inputs {
    return new Erc20InCall__Inputs(this);
  }

  get outputs(): Erc20InCall__Outputs {
    return new Erc20InCall__Outputs(this);
  }
}

export class Erc20InCall__Inputs {
  _call: Erc20InCall;

  constructor(call: Erc20InCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class Erc20InCall__Outputs {
  _call: Erc20InCall;

  constructor(call: Erc20InCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Erc20InToCall extends ethereum.Call {
  get inputs(): Erc20InToCall__Inputs {
    return new Erc20InToCall__Inputs(this);
  }

  get outputs(): Erc20InToCall__Outputs {
    return new Erc20InToCall__Outputs(this);
  }
}

export class Erc20InToCall__Inputs {
  _call: Erc20InToCall;

  constructor(call: Erc20InToCall) {
    this._call = call;
  }

  get _recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Erc20InToCall__Outputs {
  _call: Erc20InToCall;

  constructor(call: Erc20InToCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Erc20OutCall extends ethereum.Call {
  get inputs(): Erc20OutCall__Inputs {
    return new Erc20OutCall__Inputs(this);
  }

  get outputs(): Erc20OutCall__Outputs {
    return new Erc20OutCall__Outputs(this);
  }
}

export class Erc20OutCall__Inputs {
  _call: Erc20OutCall;

  constructor(call: Erc20OutCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class Erc20OutCall__Outputs {
  _call: Erc20OutCall;

  constructor(call: Erc20OutCall) {
    this._call = call;
  }
}

export class Erc20OutToCall extends ethereum.Call {
  get inputs(): Erc20OutToCall__Inputs {
    return new Erc20OutToCall__Inputs(this);
  }

  get outputs(): Erc20OutToCall__Outputs {
    return new Erc20OutToCall__Outputs(this);
  }
}

export class Erc20OutToCall__Inputs {
  _call: Erc20OutToCall;

  constructor(call: Erc20OutToCall) {
    this._call = call;
  }

  get _recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Erc20OutToCall__Outputs {
  _call: Erc20OutToCall;

  constructor(call: Erc20OutToCall) {
    this._call = call;
  }
}

export class GetUtilityVarsCall extends ethereum.Call {
  get inputs(): GetUtilityVarsCall__Inputs {
    return new GetUtilityVarsCall__Inputs(this);
  }

  get outputs(): GetUtilityVarsCall__Outputs {
    return new GetUtilityVarsCall__Outputs(this);
  }
}

export class GetUtilityVarsCall__Inputs {
  _call: GetUtilityVarsCall;

  constructor(call: GetUtilityVarsCall) {
    this._call = call;
  }
}

export class GetUtilityVarsCall__Outputs {
  _call: GetUtilityVarsCall;

  constructor(call: GetUtilityVarsCall) {
    this._call = call;
  }

  get value0(): GetUtilityVarsCallValue0Struct {
    return changetype<GetUtilityVarsCallValue0Struct>(
      this._call.outputValues[0].value.toTuple()
    );
  }
}

export class GetUtilityVarsCallValue0Struct extends ethereum.Tuple {
  get poolSizeNative(): BigInt {
    return this[0].toBigInt();
  }

  get tokenDecimalScale(): BigInt {
    return this[1].toBigInt();
  }

  get exchangeRateNum(): BigInt {
    return this[2].toBigInt();
  }

  get exchangeRateDenom(): BigInt {
    return this[3].toBigInt();
  }

  get deltaWeightNum(): BigInt {
    return this[4].toBigInt();
  }

  get deltaWeightDenom(): BigInt {
    return this[5].toBigInt();
  }
}

export class IncreaseAllowanceCall extends ethereum.Call {
  get inputs(): IncreaseAllowanceCall__Inputs {
    return new IncreaseAllowanceCall__Inputs(this);
  }

  get outputs(): IncreaseAllowanceCall__Outputs {
    return new IncreaseAllowanceCall__Outputs(this);
  }
}

export class IncreaseAllowanceCall__Inputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get _spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _addedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseAllowanceCall__Outputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }

  get _liquidityProvider(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _decimals(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _name(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _emergencyCouncil(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _operator(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _oracle(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class PermitCall extends ethereum.Call {
  get inputs(): PermitCall__Inputs {
    return new PermitCall__Inputs(this);
  }

  get outputs(): PermitCall__Outputs {
    return new PermitCall__Outputs(this);
  }
}

export class PermitCall__Inputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _spender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get _r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get _s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class PermitCall__Outputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }
}

export class RewardPoolAmountCall extends ethereum.Call {
  get inputs(): RewardPoolAmountCall__Inputs {
    return new RewardPoolAmountCall__Inputs(this);
  }

  get outputs(): RewardPoolAmountCall__Outputs {
    return new RewardPoolAmountCall__Outputs(this);
  }
}

export class RewardPoolAmountCall__Inputs {
  _call: RewardPoolAmountCall;

  constructor(call: RewardPoolAmountCall) {
    this._call = call;
  }
}

export class RewardPoolAmountCall__Outputs {
  _call: RewardPoolAmountCall;

  constructor(call: RewardPoolAmountCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SetupEIP2612Call extends ethereum.Call {
  get inputs(): SetupEIP2612Call__Inputs {
    return new SetupEIP2612Call__Inputs(this);
  }

  get outputs(): SetupEIP2612Call__Outputs {
    return new SetupEIP2612Call__Outputs(this);
  }
}

export class SetupEIP2612Call__Inputs {
  _call: SetupEIP2612Call;

  constructor(call: SetupEIP2612Call) {
    this._call = call;
  }
}

export class SetupEIP2612Call__Outputs {
  _call: SetupEIP2612Call;

  constructor(call: SetupEIP2612Call) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferWithBeneficiaryCall extends ethereum.Call {
  get inputs(): TransferWithBeneficiaryCall__Inputs {
    return new TransferWithBeneficiaryCall__Inputs(this);
  }

  get outputs(): TransferWithBeneficiaryCall__Outputs {
    return new TransferWithBeneficiaryCall__Outputs(this);
  }
}

export class TransferWithBeneficiaryCall__Inputs {
  _call: TransferWithBeneficiaryCall;

  constructor(call: TransferWithBeneficiaryCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _beneficiary(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class TransferWithBeneficiaryCall__Outputs {
  _call: TransferWithBeneficiaryCall;

  constructor(call: TransferWithBeneficiaryCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UnblockRewardCall extends ethereum.Call {
  get inputs(): UnblockRewardCall__Inputs {
    return new UnblockRewardCall__Inputs(this);
  }

  get outputs(): UnblockRewardCall__Outputs {
    return new UnblockRewardCall__Outputs(this);
  }
}

export class UnblockRewardCall__Inputs {
  _call: UnblockRewardCall;

  constructor(call: UnblockRewardCall) {
    this._call = call;
  }

  get rewardTx(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get payout(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get firstBlock(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get lastBlock(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class UnblockRewardCall__Outputs {
  _call: UnblockRewardCall;

  constructor(call: UnblockRewardCall) {
    this._call = call;
  }
}

export class UpdateOperatorCall extends ethereum.Call {
  get inputs(): UpdateOperatorCall__Inputs {
    return new UpdateOperatorCall__Inputs(this);
  }

  get outputs(): UpdateOperatorCall__Outputs {
    return new UpdateOperatorCall__Outputs(this);
  }
}

export class UpdateOperatorCall__Inputs {
  _call: UpdateOperatorCall;

  constructor(call: UpdateOperatorCall) {
    this._call = call;
  }

  get _newOperator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateOperatorCall__Outputs {
  _call: UpdateOperatorCall;

  constructor(call: UpdateOperatorCall) {
    this._call = call;
  }
}

export class UpdateOracleCall extends ethereum.Call {
  get inputs(): UpdateOracleCall__Inputs {
    return new UpdateOracleCall__Inputs(this);
  }

  get outputs(): UpdateOracleCall__Outputs {
    return new UpdateOracleCall__Outputs(this);
  }
}

export class UpdateOracleCall__Inputs {
  _call: UpdateOracleCall;

  constructor(call: UpdateOracleCall) {
    this._call = call;
  }

  get _newOracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateOracleCall__Outputs {
  _call: UpdateOracleCall;

  constructor(call: UpdateOracleCall) {
    this._call = call;
  }
}

export class UpdateRewardQuarantineThresholdCall extends ethereum.Call {
  get inputs(): UpdateRewardQuarantineThresholdCall__Inputs {
    return new UpdateRewardQuarantineThresholdCall__Inputs(this);
  }

  get outputs(): UpdateRewardQuarantineThresholdCall__Outputs {
    return new UpdateRewardQuarantineThresholdCall__Outputs(this);
  }
}

export class UpdateRewardQuarantineThresholdCall__Inputs {
  _call: UpdateRewardQuarantineThresholdCall;

  constructor(call: UpdateRewardQuarantineThresholdCall) {
    this._call = call;
  }

  get _maxUncheckedReward(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateRewardQuarantineThresholdCall__Outputs {
  _call: UpdateRewardQuarantineThresholdCall;

  constructor(call: UpdateRewardQuarantineThresholdCall) {
    this._call = call;
  }
}

export class UpgradeLiquidityProviderCall extends ethereum.Call {
  get inputs(): UpgradeLiquidityProviderCall__Inputs {
    return new UpgradeLiquidityProviderCall__Inputs(this);
  }

  get outputs(): UpgradeLiquidityProviderCall__Outputs {
    return new UpgradeLiquidityProviderCall__Outputs(this);
  }
}

export class UpgradeLiquidityProviderCall__Inputs {
  _call: UpgradeLiquidityProviderCall;

  constructor(call: UpgradeLiquidityProviderCall) {
    this._call = call;
  }

  get newPool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeLiquidityProviderCall__Outputs {
  _call: UpgradeLiquidityProviderCall;

  constructor(call: UpgradeLiquidityProviderCall) {
    this._call = call;
  }
}
